<uniqsproto name="uniqsmodel" protobuf_namespace="" gen_protobuf="true" description="uniqsmodel测试用例">
	<!-- includes可以要可以不要，目前只支持一级嵌套 -->
	<includes>
		<include name="testinclude.h" description="通用定义"/>
	</includes>
	<!-- defines就是CPP语言的#define，类似enum枚举，把一个字符串和一个int值对应，可以重复 -->
	<defines>
		<define name="E_MONEY_TYPE_NUM" value="10" description=""/>
	</defines>
	<!-- 自定义结构体 -->
	<structs>
		<struct name="ACTOR_COMMON" description="">
			<property name="uid" type="uint64" description="玩家ID"/>
			<property name="mid" type="uint64" description="内存ID"/>
			<property name="first_inited" type="bool" description=""/>
			<property name="name" type="string" description=""/>
		</struct>

		<struct name="ACTOR_MONEY_RECOV" description="">
			<property name="unlocked" type="bool" description="是否已解锁(未解锁不恢复)"/>
			<property name="last_recov_ts" type="int32" description="最后恢复时间"/>
			<property name="recov_timer" type="uint64" description="恢复timer"/>
		</struct>
		<struct name="ACTOR_MONEY" description="">
			<property name="money_num" type="int64" complex_type="rawarray" max="E_MONEY_TYPE_NUM" description=""/>
			<property name="money_add_decimal" type="int32" complex_type="rawarray" max="E_MONEY_TYPE_NUM" description="货币2位小数尾数"/>
			<property name="rmb_payed" type="int32" description=""/>
			<property name="pay_jewl" type="int32" description="充值基础钻石"/>
			<property name="present_jewl" type="int32" description="充值时赠送的钻石（首冲、礼包多余部分等）"/>
			<property name="recov" type="ACTOR_MONEY_RECOV" description=""/>
		</struct>
		
		<struct name="WORLD_ACTOR" description="玩家类">
			<property name="actor_common" type="ACTOR_COMMON" description=""/>
			<property name="money" type="ACTOR_MONEY" description=""/>
		</struct>
	</structs>
</uniqsproto>
